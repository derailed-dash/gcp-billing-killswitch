[project]
name = "kill-gcp-project-billing"
version = "0.1.0"
description = "Google Cloud Run Function to automatically disable billing for a Google Cloud project."
authors = [
    {name = "Dazbo (Darren Lester)", email = "derailed.dash@gmail.com"},
]
dependencies = [
    "functions-framework",
    "google-cloud-billing",
    "google-cloud-billing-budgets",
    "google-cloud-logging",
    "google-api-python-client"
]

requires-python = ">=3.12,<3.13"

[dependency-groups]
dev = [
    "pytest",
    "uv", # Although uv is installed globally, it's good to list it for clarity
    "codespell",
    "ruff",
    "mypy",
    "jupyter", # From setup-env.sh
]

[project.optional-dependencies]

lint = [
    "codespell",
    "ruff",
    "mypy",
]

[tool.ruff]
line-length = 130
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "C",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP", # pyupgrade
    "RUF", # ruff specific rules
]
ignore = [
    "E302", # expected two blank lines between defs
    "W291", # trailing whitespace
    "W293"  # line contains whitespace
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
disallow_untyped_calls = false     # Prohibit calling functions that lack type annotations.
disallow_untyped_defs = false      # Allow defining functions without type annotations.
disallow_incomplete_defs = true    # Prohibit defining functions with incomplete type annotations.
no_implicit_optional = true        # Require `Optional[T]` for variables that can be `None`.
check_untyped_defs = true          # Type-check the body of functions without annotations. Catch potential mismatches.
disallow_subclassing_any = true    # Prohibit a class from inheriting from a value of type `Any`.
warn_incomplete_stub = true        # Warn about incomplete type stubs (`.pyi` files).
warn_redundant_casts = true        # Warn if a type cast is unnecessary.
warn_unused_ignores = true         # Warn about `# type: ignore` comments that are no longer needed.
warn_unreachable = true            # Warn about code that is unreachable.
follow_imports = "silent"          # Type-check imported modules but suppress errors from them.
ignore_missing_imports = true      # Suppress errors about unresolved imports.
explicit_package_bases = true      # Enforce explicit declaration of package bases.
disable_error_code = ["misc", "no-any-return", "no-untyped-def"]

exclude = [".venv", ".git"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"] # This helps pytest to find tests, making collection faster
